{"version":3,"sources":["ZnSize.js"],"names":["getComputedStyle","prop","element","value","document","body","defaultView","parseInt","getMaxElement","side","elements","elementsLength","length","elVal","maxVal","Side","capitalizeFirstLetter","i","getBoundingClientRect","getSmallestOffsetLeft","Array","from","querySelectorAll","reduce","lowest","Math","min","offsetLeft","heightCalc","bodyOffset","offsetHeight","bodyScroll","scrollHeight","documentElementOffset","documentElement","documentElementScroll","furthestElement","getAllElements","apply","getAllMeasurements","max","widthCalc","offsetWidth","scrollWidth","eastToWest","clientWidth","scroll","dimCalc","string","charAt","toUpperCase","slice","ZnSize","updateRequester","methods","timer","heightMethod","height","widthMethod","width","observer","auto","currentWidth","currentHeight","events","dimensions","getHeight","getWidth","timeout","clearInterval","disconnect","removeEventHandlers","sendDimensions","setInterval","setupMutation","addEventHandlers","forEach","window","addEventListener","handleEvent","bind","removeEventListener","e","console","log","method","MutationClass","MutationObserver","WebKitMutationObserver","mutations","setTimeout","observe","querySelector","attributes","attributeOldValue","characterData","characterDataOldValue","childList","subtree","originalValue","newValue","tolerance","abs"],"mappings":"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","file":"ZnSize.js","sourceRoot":"../js","sourcesContent":["// Based on: https://github.com/davidjbradshaw/iframe-resizer\n// Goal is to make a simple resize system\n\n/**\n * Get the int value of a property for an element\n * @param prop\n * @param element\n * @returns {number}\n */\nconst getComputedStyle = (prop, element) => {\n  let value = 0\n  element = element || document.body\n  value = document.defaultView.getComputedStyle(element, null)\n  value = value !== null ? value[prop] : 0\n  return parseInt(value, 10)\n}\n\n/**\n * Get the largest element based on the target page side & given elements\n * @param side\n * @param elements\n * @returns {number}\n */\nconst getMaxElement = (side, elements) => {\n  let elementsLength = elements.length\n\n  let elVal = 0\n\n  let maxVal = 0\n\n  let Side = capitalizeFirstLetter(side)\n  for (let i = 0; i < elementsLength; i++) {\n    elVal = elements[i].getBoundingClientRect()[side] + getComputedStyle(`margin${Side}`, elements[i])\n    if (elVal > maxVal) {\n      // console.log({ 'elVal': elVal, 'maxVal': maxVal })\n      maxVal = elVal\n    }\n  }\n  // console.log({'getMaxElement.maxVal': maxVal})\n  return maxVal\n}\n\nconst getSmallestOffsetLeft = () => {\n  return Array.from(document.querySelectorAll('body *'))\n    .reduce((lowest, element) => Math.min(element.offsetLeft, lowest), 0)\n}\n\nconst heightCalc = {\n  /**\n     * Get the body.offsetHeight\n     * @returns {number}\n     */\n  bodyOffset: () => {\n    return document.body.offsetHeight + getComputedStyle('marginTop') + getComputedStyle('marginBottom')\n  },\n  /**\n     * Get the body.scrollHeight\n     * @returns {number}\n     */\n  bodyScroll: () => {\n    return document.body.scrollHeight\n  },\n  /**\n     * Get the documentElement.offsetHeight\n     * @returns {number}\n     */\n  documentElementOffset: () => {\n    return document.documentElement.offsetHeight\n  },\n  /**\n     * Get the documentElement.scrollHeight\n     * @returns {number}\n     */\n  documentElementScroll: () => {\n    return document.documentElement.scrollHeight\n  },\n  /**\n     * Get the height of the element that's closest to the bottom of the page\n     * @returns {number}\n     */\n  furthestElement: () => {\n    return getMaxElement('bottom', getAllElements())\n  },\n  /**\n     * Get the min value of all the base measurements\n     * @returns {number}\n     */\n  min: () => {\n    return Math.min.apply(null, getAllMeasurements(heightCalc))\n  },\n  /**\n     * Get the max value of all the base measurements\n     * @returns {number}\n     */\n  max: () => {\n    return Math.max.apply(null, getAllMeasurements(heightCalc))\n  }\n}\n\nconst widthCalc = {\n  /**\n     * Get the body.offsetWidth\n     * @returns {number}\n     */\n  bodyOffset: () => {\n    return document.body.offsetWidth\n  },\n  /**\n     * Get the body.scrollWidth\n     * @returns {number}\n     */\n  bodyScroll: () => {\n    return document.body.scrollWidth\n  },\n  /**\n     * Get the documentElement.offsetWidth\n     * @returns {number}\n     */\n  documentElementOffset: () => {\n    return document.documentElement.offsetWidth\n  },\n  /**\n     * Get the documentElement.scrollWidth\n     * @returns {number}\n     */\n  documentElementScroll: () => {\n    return document.documentElement.scrollWidth\n  },\n  /**\n     * Get the width of the element that's furthest to the right of the page\n     * @returns {number}\n     */\n  furthestElement: () => {\n    return getMaxElement('right', getAllElements())\n  },\n  eastToWest: () => {\n    if (document.body.scrollWidth > document.body.clientWidth) {\n      return getSmallestOffsetLeft() + document.body.scrollWidth\n    }\n\n    return getSmallestOffsetLeft() + widthCalc.furthestElement()\n  },\n  /**\n     * Get the min value of all the base measurements\n     * @returns {number}\n     */\n  min: () => {\n    return Math.min.apply(null, getAllMeasurements(widthCalc))\n  },\n  /**\n     * Get the max value of all the base measurements\n     * @returns {number}\n     */\n  max: () => {\n    return Math.max.apply(null, getAllMeasurements(widthCalc))\n  },\n  /**\n     * Gets the max of body.scrollWidth & documentElement.scrollWidth\n     * @returns {number}\n     */\n  scroll: () => {\n    return Math.max(widthCalc.bodyScroll(), widthCalc.documentElementScroll())\n  }\n}\n\n/**\n * Gets all the basic measurements from the dimension calculation object\n * @param dimCalc\n * @returns {(*|number)[]}\n */\nconst getAllMeasurements = (dimCalc) => {\n  return [\n    dimCalc.bodyOffset(),\n    dimCalc.bodyScroll(),\n    dimCalc.documentElementOffset(),\n    dimCalc.documentElementScroll()\n  ]\n}\n\n/**\n * Gets all the elements on the page\n * @returns {NodeListOf<Element>}\n */\nconst getAllElements = () => {\n  return document.querySelectorAll('body *')\n}\n\n/**\n * Capitalizes the first letter of a string\n * @param string\n * @returns {string}\n */\nconst capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport default class ZnSize {\n  /**\n   * UpdateRequester Function\n   *\n   * @callback UpdateRequester\n   * @param {{ width: string, height: string }} dimensions\n   *\n   * @returns {Promise<{ width: string, height: string }>}\n   */\n\n  /**\n   * ZnSize\n   * Auto-detects sizing needs, and executes resizing on command\n   * \n   * @param {UpdateRequester} updateRequester\n   * @param {Object} methods\n   * @param {'bodyOffset' | 'bodyScroll' | 'documentElementOffset' | 'documentElementScroll' | 'furthestElement' | 'min' | 'max'} methods.height\n   * @param {'bodyOffset' | 'bodyScroll' | 'documentElementOffset' | 'documentElementScroll' | 'furthestElement' | 'min' | 'max' | 'scroll'} methods.width\n   */\n  constructor (updateRequester, methods = {}) {\n    this.updateRequester = updateRequester\n    this.timer = null\n    this.heightMethod = typeof methods.height === 'string' ? methods.height : 'bodyOffset'\n    this.widthMethod = typeof methods.width === 'string' ? methods.width : 'scroll'\n    this.observer = null\n    this.auto = false\n    this.currentWidth = 0\n    this.currentHeight = 0\n    this.events = [\n      'animationstart',\n      'webkitAnimationStart',\n      'animationiteration',\n      'webkitAnimationIteration',\n      'animationend',\n      'webkitAnimationEnd',\n      'orientationchange',\n      'transitionstart',\n      'webkitTransitionStart',\n      'MSTransitionStart',\n      'oTransitionStart',\n      'otransitionstart',\n      'transitioniteration',\n      'webkitTransitionIteration',\n      'MSTransitionIteration',\n      'oTransitionIteration',\n      'otransitioniteration',\n      'transitionend',\n      'webkitTransitionEnd',\n      'MSTransitionEnd',\n      'oTransitionEnd',\n      'otransitionend'\n    ]\n  }\n\n  /**\n     * Sets the page size automatically or uses the supplied dimensions\n     * @param dimensions\n     */\n  sendDimensions (dimensions) {\n    const height = this.currentHeight\n    const width = this.currentWidth\n    this.currentHeight = this.getHeight()\n    this.currentWidth = this.getWidth()\n    // console.log({\n    //   'originalHeight': height,\n    //   'newHeight': this.currentHeight,\n    //   'heightTolerance': Math.abs(height - this.currentHeight),\n    //   'sizeChanged': this.sizeChanged(height, this.currentHeight)\n    // })\n    //\n    // console.log({\n    //   'originalWidth': width,\n    //   'newWidth': this.currentWidth,\n    //   'widthTolerance': Math.abs(width - this.currentWidth),\n    //   'sizeChanged': this.sizeChanged(width, this.currentWidth)\n    // })\n    //Implement tolerance\n\n    if (typeof dimensions === 'undefined') {\n      dimensions = {}\n    }\n    if (!dimensions.height) {\n      dimensions.height = `${this.currentHeight}px`\n    }\n    if (!dimensions.width) {\n      dimensions.width = `${this.currentWidth}px`\n    }\n\n    this.updateRequester(dimensions)\n  }\n\n  /**\n     * Toggle the autosize feature, if timeout is a int value it will default to using setInterval instead of MutationObserver\n     * @param timeout\n     * @returns {null}\n     */\n  autoSize (timeout) {\n    // timeout = typeof timeout === \"undefined\" ? 100 : timeout // Currently override MutationObserver due to some bugs\n    if (this.auto) {\n      this.auto = false\n      if (this.observer === null) {\n        if (this.timer === null) {\n          return null\n        } else {\n          clearInterval(this.timer)\n          this.timer = null\n        }\n      } else {\n        this.observer.disconnect()\n        this.observer = false\n      }\n      this.removeEventHandlers()\n      return null\n    }\n    this.sendDimensions()\n    typeof timeout === 'number'\n      ? this.timer = setInterval(() => {\n        this.sendDimensions()\n      }, timeout)\n      : this.observer = this.setupMutation()\n    this.addEventHandlers()\n    this.auto = true\n  }\n\n  addEventHandlers () {\n    this.events.forEach(value => {\n      window.addEventListener(value, this.handleEvent.bind(this))\n    })\n  }\n\n  removeEventHandlers () {\n    this.events.forEach(value => {\n      window.removeEventListener(value, this.handleEvent.bind(this))\n    })\n  }\n\n  handleEvent (e) {\n    console.log(typeof this, this)\n    this.sendDimensions()\n  }\n\n  /**\n     * Get the page width\n     * @param method\n     * @returns {number}\n     */\n  getWidth (method) {\n    method = typeof method === 'undefined' ? this.widthMethod : method\n    // console.log({'widthMethod': method})\n    return widthCalc[method]()\n  }\n\n  /**\n     * Get the page height\n     * @param method\n     * @returns {number}\n     */\n  getHeight (method) {\n    method = typeof method === 'undefined' ? this.heightMethod : method\n    // console.log({'heightMethod': method})\n    return heightCalc[method]()\n  }\n\n  /**\n     * Is auto resize enabled\n     * @returns {boolean}\n     */\n  isAutoEnabled () {\n    return this.auto\n  }\n\n  /**\n     * Sets up MutationObserver\n     * @returns {MutationObserver}\n     */\n  setupMutation () {\n    let MutationClass = window.MutationObserver || window.WebKitMutationObserver\n    let observer = new MutationClass((mutations, observer) => {\n      setTimeout(() => {\n        this.sendDimensions()\n      }, 16)\n    })\n    observer.observe(document.querySelector('body'), {\n      attributes: true,\n      attributeOldValue: false,\n      characterData: true,\n      characterDataOldValue: false,\n      childList: true,\n      subtree: true\n    })\n    return observer\n  }\n\n  /**\n     * Check if a size has changed\n     * @param originalValue\n     * @param newValue\n     * @param tolerance\n     * @returns {boolean}\n     */\n  sizeChanged (originalValue, newValue, tolerance) {\n    tolerance = typeof tolerance === 'number' ? tolerance : 0\n    return !Math.abs(originalValue - newValue) <= tolerance\n  }\n}\n"]}